@mixin rounded-corner($r) {
  -moz-border-radius: $r;
  -webkit-border-radius: $r;
  border-radius: $r;
}

// Фоновая картинки для input, button
@mixin bg-image-button($border: none, $outline: none, $bgcolor: transparent, $bgsize: cover, $bgposition: center, $bgrepeat: no-repeat) {
  border: $border;
  outline: $outline;
  background-color: $bgcolor;
  background-size: $bgsize;
  background-position: $bgposition;
  background-repeat: $bgrepeat;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;       
  box-shadow: $shadow;
}

// Cоздание масштабируемых элементов (изображение/картинки заднего фона) с поддержкой заданного соотношения (16/9 например)
@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}

// Позволяет универсально задать набор стилей для input, textarea ( @include input-placeholder { color: $grey; } )
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

// Медиа запрос под различные устройства, пример ниже показывает увеличение внутренних отступов и размера шрифта, когда вьюпорт становится больше 1024px
$breakpoints: (
  "phone":        400px,
  "phone-wide":   480px,
  "phablet":      560px,
  "tablet-small": 640px,
  "tablet":       768px,
  "tablet-wide":  1024px,
  "desktop":      1248px,
  "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}